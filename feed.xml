<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://rilac1.github.io/</id><title>배우고, 적용하고, 개선하기</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2022-12-06T22:55:19+09:00</updated> <author> <name>Kang-JeongHyun</name> <uri>https://rilac1.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://rilac1.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://rilac1.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator> <rights> © 2022 Kang-JeongHyun </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>내 컴퓨터와 인터넷은 어떻게 연결되는 것일까?</title><link href="https://rilac1.github.io/posts/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%84%9C%EB%B2%84/" rel="alternate" type="text/html" title="내 컴퓨터와 인터넷은 어떻게 연결되는 것일까?" /><published>2021-09-09T12:00:00+09:00</published> <updated>2022-04-20T21:03:51+09:00</updated> <id>https://rilac1.github.io/posts/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%84%9C%EB%B2%84/</id> <content src="https://rilac1.github.io/posts/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%84%9C%EB%B2%84/" /> <author> <name>Kang-JeongHyun</name> </author> <category term="Backend" /> <summary> 본 포스팅은 생활코딩의 영상내용을 참고하여 작성하였습니다. 공유기 (router) 집집마다 있는 공유기를 전문 용어로 라우터라고 합니다. 우리가 인터넷을 사용하기 위해서는 통신사를 통해 배선을 계약합니다. 이 때 이 선을 컴퓨터나 기타 장치에 꽂게 되면 59.6.66.238과 같은 IP 주소가 자동으로 할당되게 됩니다. 이 컴퓨터말고 다른 장치에서 인터넷을 사용하기 위해서는 서로 다른 배선을 계약을 해야 하는데 비용 문제가 발생합니다. 따라서 우리는 공유기를 사용하게 되는데 방금 꽂은 그 선을 컴퓨터가 아닌 공유기의 WAN 포트에 꽂게 됩니다. 그렇게 되면 59.6.66.238은 공유기의 IP 주소가 됩니다. 이제 다른 장치를 공유기의 LAN 포트에 연결하면 공유기는 각 장치에 192.16... </summary> </entry> <entry><title>우분투에서 Apach Kafka 사용해보기</title><link href="https://rilac1.github.io/posts/%EC%B9%B4%ED%94%84%EC%B9%B4-%EC%82%AC%EC%9A%A9/" rel="alternate" type="text/html" title="우분투에서 Apach Kafka 사용해보기" /><published>2021-08-12T12:00:00+09:00</published> <updated>2022-04-15T21:03:51+09:00</updated> <id>https://rilac1.github.io/posts/%EC%B9%B4%ED%94%84%EC%B9%B4-%EC%82%AC%EC%9A%A9/</id> <content src="https://rilac1.github.io/posts/%EC%B9%B4%ED%94%84%EC%B9%B4-%EC%82%AC%EC%9A%A9/" /> <author> <name>Kang-JeongHyun</name> </author> <category term="Backend" /> <summary> ❗ Kafka를 실행하기 앞서 로컬 환경에 JAVA 8+ 이상이 설치되어야 합니다. Step 1: Get Kafka https://kafka.apache.org/downloads 이곳에서 최신 카프카 릴리즈를 다운로드 받습니다. 이 때 Source가 아닌 Binary를 다운로드 받습니다. Scala 2.12, 2.13은 무슨차이가 있는지 모르겠지만 아무거나 받아도 무방할 듯 합니다. $ mkdir /downloads $ wget -P /downloads/ https://mirror.navercorp.com/apache/kafka/2.8.0/kafka_2.12-2.8.0.tgz $ tar -xzf /downloads/kafka_2.13-2.7.0.tgz $ cd kafka_2.1... </summary> </entry> <entry><title>Apach Kafka란?</title><link href="https://rilac1.github.io/posts/%EC%B9%B4%ED%94%84%EC%B9%B4-%EC%86%8C%EA%B0%9C/" rel="alternate" type="text/html" title="Apach Kafka란?" /><published>2021-08-11T12:00:00+09:00</published> <updated>2022-04-12T21:03:51+09:00</updated> <id>https://rilac1.github.io/posts/%EC%B9%B4%ED%94%84%EC%B9%B4-%EC%86%8C%EA%B0%9C/</id> <content src="https://rilac1.github.io/posts/%EC%B9%B4%ED%94%84%EC%B9%B4-%EC%86%8C%EA%B0%9C/" /> <author> <name>Kang-JeongHyun</name> </author> <category term="Backend" /> <summary> 이 포스팅은 cloudkarfka의 article을 참고하여 작성하였습니다. 1. Kafka란? Kafka는 publish-subscribe모델의 메시지 큐 시스템입니다. pub-sub 모델 메시지를 생산해내는 publisher와 메시지를 수신하는 receiver가 있다고 가정해보겠습니다. pub-sub모델은 publisher가 receiver에게 메시지를 직접 전달해주지 않고 브로커에게 전달합니다. 브로커는 전달받은 메시지를 알맞은 topic에 따라 분류하여 카테고리화 합니다. receiver는 원하는 메시지가 있는 topic을 구독(subscribe)하여 브로커로부터 메시지를 받을 수 있습니다. 2. 관련 용어 정리 2.1 데이터의 단위와 데이터가 쓰여지는 공간 Record ... </summary> </entry> <entry><title>데이터 파이프라인</title><link href="https://rilac1.github.io/posts/%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8/" rel="alternate" type="text/html" title="데이터 파이프라인" /><published>2021-08-10T12:00:00+09:00</published> <updated>2022-04-01T21:03:51+09:00</updated> <id>https://rilac1.github.io/posts/%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8/</id> <content src="https://rilac1.github.io/posts/%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8/" /> <author> <name>Kang-JeongHyun</name> </author> <category term="Backend" /> <summary> Apach Kafka를 사용하기에 앞서 데이터 파이프라인에 대해 간단하게 알아보고자 포스팅을 작성합니다. 그랩의 IT 뉴스레터를 참고하여 작성하였습니다. 데이터 파이프라인 개요 데이터 생성 데이터 수집 데이터 가공 후 저장 (ETL) 데이터 분석 및 시각화 (BI) 데이터 생성 데이터의 종류는 크게 두 가지로 나뉩니다. 서비스 데이터 ex) 상품 정보, 고객 정보 로그 데이터 ex) 클릭, 스크롤, 머무르기 같은 이벤트 클라이언트 로그 유저가 서비스를 사용하면서 생성되는 로그 서버 로그 백엔드... </summary> </entry> <entry><title>우분투에서의 MongoDB 설치 및 활용</title><link href="https://rilac1.github.io/posts/HowToUse_MongoDB/" rel="alternate" type="text/html" title="우분투에서의 MongoDB 설치 및 활용" /><published>2021-07-12T12:00:00+09:00</published> <updated>2022-04-20T21:03:51+09:00</updated> <id>https://rilac1.github.io/posts/HowToUse_MongoDB/</id> <content src="https://rilac1.github.io/posts/HowToUse_MongoDB/" /> <author> <name>Kang-JeongHyun</name> </author> <category term="DB" /> <category term="MongoDB" /> <summary> 1. Ubuntu에 MongoDB 설치하기 공식 홈페이지 1-1. GPG 키 import wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add - 1-2. MongoDB 리스트 파일 만들기 20.04 echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/... </summary> </entry> </feed>
